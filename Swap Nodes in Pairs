# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:
        l=[]
        a=head
        while head :
            l.append(head.val)
            head=head.next
        if not l :return None
        if len(l)==1:return  a
        i=1
        while i<len(l):
            l[i-1],l[i]=l[i],l[i-1]
            i+=2
        head=ListNode(l[0])
        current=head
        for k in l[1::]:
            current.next=ListNode(k)
            current=current.next
        return head
        
