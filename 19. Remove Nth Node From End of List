# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        l=[]
        while head:
            l.append(head.val)
            head=head.next
        l.pop(-n)
        if not l:return None
        head=ListNode(l[0])
        current=head
        for k in l[1::]:
            current.next=ListNode(k)
            current=current.next
        return head
