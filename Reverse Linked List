# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        l=[]
        while head:
            l.append(head.val)
            head=head.next
        if not l:
            return None
        head=ListNode(l[-1])
        current=head
        for k in range(len(l)-2,-1,-1):
            current.next=ListNode(l[k])
            current=current.next
        return head
